module Comp_2 (A_gt_B, A_lt_B,A_eq_B, A,B);
output 	A_gt_B, A_lt_B,A_eq_B;
input 	[1:0]A,B;
wire T1,T2,T3,T4,T5,T6,T7,T8,N1,N2,N3,N4,N5,N6,N7,N8;
// a>b
not(N1,B[1]);
not(N2,B[0]);
and(T2,A[0],N1,N2);
not(N3,B[1])
and(T1,A[1],N3);
not(N4,B[0])
and(T3,A[1],A[0],N4);
or(A_gt_B,T1,T2,T3);
// a<b
not(N5,A[1])
not(N6,A[0])
and(T4,N5,N6,B[0]);
not(N7,A[1])
and(T5,N7,B[1]);
not(N8,A[0])
and(T6,N8,B[1],B[0]);
or(A_lt_B,T4,T5,T6);

// a=b
xnor(T7,A[0],B[O])
xnor(T8,A[1],B[1])
and(A_eq_B,T7,T8);
endmodule
